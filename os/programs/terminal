local termStart = 3
local termWidth = 52
local curLin = 1
local sEnv = {

}
function stout(str, col)
  if col then
    term.setTextColor(col)
  end
  print("stout: "..str)
  term.setTextColor(colors.lightGray)
end
function terminal()
  term.setCursorPos(1,2)
  while(true) do
    term.setTextColor(colors.cyan)
    write("["..os.getComputerID().."#"..os.getComputerLabel().."]$:")
    term.setTextColor(colors.lightGray)
    --term.setCursorPos(string.len("["..os.getComputerID().."#"..os.getComputerLabel().."]$:")+1,curLin)
    --curLin = curLin +1
    sCmd = io.read()
    if string.find(sCmd,"exit",1) then
      main_gui()
    elseif string.find(sCmd,"rm",1) then
        if fs.exists(string.sub(sCmd,4)) then
          fs.delete(string.sub(sCmd,4))
          stout("Deleted file "..string.sub(sCmd,4))
          --curLin = curLin + 1
        else
          stout("File not found '"..string.sub(sCmd,4).."'")
          --curLin = curLin + 1
        end
    elseif string.find(sCmd,"ls",1) then
      stout("Not yet implemented",colors.red)
      --curLin = curLin + 1
    else
      if fs.exists(sCmd) and fs.isDir(sCmd) == false then
        os.run({},sCmd)
      else
        stout("Unknown command")
        --curLin = curLin+1
      end
    end
  end
end
function gui()
  menubarColor = colors.green
  mx = 51
  edge.render(1,1,mx,1,menubarColor,colors.cyan,"O",colors.black,false)
  while(true) do
    local event, button, x, y = os.pullEvent("mouse_click")
    if x >= 1 and x <= 4 and y == 1 and button == 1 then
      edge.render(1,1,4,1,colors.gray,colors.cyan,"O",colors.white,false)
      edge.render(1,2,10,10,menubarColor,colors.cyan,"",colors.white,true)

      edge.render(1,2,10,2,menubarColor,colors.cyan,"   Menu   ",colors.black,false)
      edge.render(1,3,10,3,menubarColor,colors.cyan,"Update",colors.black,false)
      edge.render(1,4,10,4,menubarColor,colors.cyan,"Settings",colors.black,false)
      edge.render(1,5,10,5,menubarColor,colors.cyan,"Files",colors.black,false)
      edge.render(1,6,10,5,menubarColor,colors.cyan,"Terminal",colors.black,false)
      edge.render(1,7,10,7,menubarColor,colors.cyan,"Logout",colors.black,false)
      edge.render(1,8,10,8,menubarColor,colors.cyan,"Reboot",colors.black,false)
      edge.render(1,9,10,9,menubarColor,colors.cyan,"Shut down",colors.black,false)
      edge.render(1,10,10,10,menubarColor,colors.cyan,"About",colors.black,false)
      while(true) do
        local event, button, x, y = os.pullEvent("mouse_click")
        if x >= 10 and y >= 1 or x >= 1 and y >= 11 or x >= 1 and x <= 4 and y == 1 then
          files = settings.getVariable("Axiom/settings.0","fexplore_startdir")
          --filebrowser()

        end
        if event == "terminate" then
          gui()
        end
        if x >= 1 and x <= 10 and y == 3 then
          edge.render(1,3,10,3,menubarColor,colors.cyan,"Updating..",colors.black,false)
          execUpd()
        end
        if x >= 1 and x <= 10 and y == 4 then
          --next.newTask("Axiom/programs/settings")
          settings_gui()
        end
        if x >= 1 and x <= 10 and y == 6 then
          fs.delete("safeStart")
          fs.move("startup","ax")
          a = fs.open("startup","w")
          a.writeLine("shell.run('clear')")
          a.writeLine("print('Type ax to go back to Axiom')")
          a.close()
          os.reboot()
        end
        if x >= 1 and x <= 10 and y == 5 then
          files = settings.getVariable("Axiom/settings.0","fexplore_startdir")
          filebrowser()
        end
        if x >= 1 and x <= 10 and y == 7 then
          shell.run("clear")
          state = "loginscreen"
          login_gui()
        end
        if x >= 1 and x <= 10 and y == 8 then
          if settings.getVariable("Axiom/settings.0","first_update") == "false" and settings.getVariable("Axiom/settings.0","licensed") == "true" then
            settings.setVariable("Axiom/settings.0","first_update","true")
            edge.render(1,1,mx,19,colors.cyan,colors.cyan,"",colors.black,false)
            edge.render(16,7,34,12,colors.white,colors.cyan,"",colors.black,true)
            edge.render(17,8,34,8,colors.white,colors.cyan,"Axiom is updating ",colors.black,false)
            edge.render(17,10,34,10,colors.white,colors.cyan,"  Please wait.",colors.black,false)
            execUpd()
            os.reboot()
          end
          sleep(0.5)
          os.reboot()
        end
        if x >= 1 and x <= 10 and y == 10 then
          sysInfo()
        end
        if x >= 1 and x <= 10 and y == 9 then
          tasks.clock = false
          shell.run("clear")
          cprint("A X I O M",9)
          cprint(". . . . .",10)
          sleep(0.2)
          shell.run("clear")
          cprint("  X I O  ",9)
          cprint("  . . .  ",10)
          sleep(0.2)
          shell.run("clear")
          cprint("    I    ",9)
          cprint("    .    ",10)
          sleep(0.2)
          shell.run("clear")
          cprint("         ",9)
          cprint("         ",10)
          sleep(1)
          if settings.getVariable("Axiom/settings.0","first_update") == "false" and settings.getVariable("Axiom/settings.0","licensed") == "true" then
            settings.setVariable("Axiom/settings.0","first_update","true")
            edge.render(1,1,mx,19,colors.cyan,colors.cyan,"",colors.black,false)
            edge.render(16,7,34,12,colors.white,colors.cyan,"",colors.black,true)
            edge.render(17,8,34,8,colors.white,colors.cyan,"Axiom is updating ",colors.black,false)
            edge.render(17,10,34,10,colors.white,colors.cyan,"  Please wait.",colors.black,false)
            execUpd()
            os.shutdown()
          end
          os.shutdown()
        end
      end
    end
  end
end
os.loadAPI("Axiom/libraries/settings")
os.loadAPI("Axiom/libraries/edge")
shell.run("clear")
parallel.waitForAll(terminal,gui)
